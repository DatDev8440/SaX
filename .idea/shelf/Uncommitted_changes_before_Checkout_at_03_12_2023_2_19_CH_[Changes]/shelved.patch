Index: src/main/java/com/sax/services/impl/CtkmSachService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sax.services.impl;\r\n\r\nimport com.microsoft.sqlserver.jdbc.SQLServerException;\r\nimport com.sax.dtos.CtkmDTO;\r\nimport com.sax.dtos.CtkmSachDTO;\r\nimport com.sax.entities.Ctkm;\r\nimport com.sax.entities.CtkmSach;\r\nimport com.sax.repositories.ICtkmSachRepository;\r\nimport com.sax.repositories.ISachRepository;\r\nimport com.sax.services.ICtkmSachService;\r\nimport com.sax.utils.DTOUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.NoSuchElementException;\r\nimport java.util.Set;\r\n\r\n@Service\r\npublic class CtkmSachService implements ICtkmSachService {\r\n    @Autowired\r\n    ICtkmSachRepository repository;\r\n    @Autowired\r\n    ISachRepository sachRepository;\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> getAll() {\r\n        return DTOUtils.getInstance().convertToDTOList(repository.findAll(), CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> getAllByIds(List<Integer> ids) throws SQLServerException {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public CtkmSachDTO getById(Integer id) {\r\n        return DTOUtils.getInstance()\r\n                .converter(repository.findById(id).\r\n                        orElseThrow(() -> new NoSuchElementException(\"Khong tim thay\")), CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public CtkmSachDTO insert(CtkmSachDTO e) throws SQLServerException {\r\n        return DTOUtils.getInstance()\r\n                .converter(repository.\r\n                save(DTOUtils.getInstance()\r\n                        .converter(e,CtkmSach.class)), CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public void update(CtkmSachDTO e) throws SQLServerException {\r\n        repository.save(DTOUtils.getInstance().converter(e, CtkmSach.class));\r\n    }\r\n\r\n    @Override\r\n    public void delete(Integer id) throws SQLServerException {\r\n        repository.deleteById(id);\r\n    }\r\n\r\n@Transactional\r\n@Override\r\n    public void deleteAll(Set<Integer> ids) throws SQLServerException {\r\n        boolean check = true;\r\n        StringBuilder name= new StringBuilder(\"Sách không thể xóa:\");\r\n        for (Integer x:ids) {\r\n            CtkmSach ctkmSach = repository.findById(x).orElseThrow();\r\n            if (ctkmSach.getCtkm().getNgayKetThuc().isBefore(LocalDateTime.now())){\r\n                check = false;\r\n                name.append(\" \"+ctkmSach.getSach().getTenSach()+\", \");\r\n            }\r\n            else repository.deleteById(x);\r\n        }\r\n        if (!check) throw new RuntimeException(\"Không thể xóa sách \"+name+\"do chương trình đã kết thúc\");\r\n\r\n}\r\n\r\n    @Override\r\n    public int getTotalPage(Pageable page) {\r\n        return repository.findAll(page).getTotalPages();\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> getPage(Pageable page) {\r\n        return DTOUtils.getInstance().convertToDTOList(repository.findAll(page).stream().toList(), CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> searchByKeyword(String keyword) {\r\n        return DTOUtils.getInstance()\r\n                .convertToDTOList(repository.findAllByKeyword(keyword),CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> insetAll(List<CtkmSachDTO> e) {\r\n       return DTOUtils.getInstance()\r\n               .convertToDTOList( repository.saveAll(DTOUtils.getInstance()\r\n                       .convertToDTOList(e,CtkmSach.class)),\r\n                       CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> searchAllSachInCtkm(String kw, CtkmDTO ctkmDTO) {\r\n        Ctkm  ctkm =DTOUtils.getInstance().converter(ctkmDTO,Ctkm.class);\r\n        return DTOUtils.getInstance()\r\n                .convertToDTOList(repository.searchAllSachInCtkm(kw,ctkm),\r\n                        CtkmSachDTO.class);\r\n    }\r\n\r\n    @Override\r\n    public List<CtkmSachDTO> getAllSachInCtkm(CtkmDTO ctkmDTO) {\r\n        Ctkm ctkm = DTOUtils.getInstance().converter(ctkmDTO,Ctkm.class);\r\n        return DTOUtils.getInstance()\r\n                .convertToDTOList(repository.findAllByCtkm(ctkm)\r\n                        ,CtkmSachDTO.class);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/sax/services/impl/CtkmSachService.java b/src/main/java/com/sax/services/impl/CtkmSachService.java
--- a/src/main/java/com/sax/services/impl/CtkmSachService.java	(revision 6d3c4db6b10a9c5cf88b162f2eddd26d6c9fb77a)
+++ b/src/main/java/com/sax/services/impl/CtkmSachService.java	(date 1701587627723)
@@ -66,12 +66,12 @@
 @Override
     public void deleteAll(Set<Integer> ids) throws SQLServerException {
         boolean check = true;
-        StringBuilder name= new StringBuilder("Sách không thể xóa:");
+        StringBuilder name= new StringBuilder("");
         for (Integer x:ids) {
             CtkmSach ctkmSach = repository.findById(x).orElseThrow();
             if (ctkmSach.getCtkm().getNgayKetThuc().isBefore(LocalDateTime.now())){
                 check = false;
-                name.append(" "+ctkmSach.getSach().getTenSach()+", ");
+                name.append(ctkmSach.getSach().getTenSach()+", ");
             }
             else repository.deleteById(x);
         }
